version: '2'

services:

  web:
    build: .
    # command: npm start
    # volumes:
    #   - .:/usr/src/app
    #   - /usr/src/app/node_modules
    restart: always
    ports:
      - "3001:8080"
    depends_on:
      - psql
      - mongo
    networks:
      mongo_net:
        ipv4_address: 172.16.0.4
    environment:
      WAIT_HOSTS: mongo:27017, psql:5432
    #   POSTGRES_URL: postgres://172.20.0.2:5432
    #   MONGO_URL: mongodb://172.20.0.3:27017
    env_file: .docker.env
    # smae level of the docker compose

  psql:
    image: postgres
    restart: always
    volumes:
      - ./dataP:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: docker
    networks: 
      mongo_net:
        ipv4_address: 172.16.0.3
    
  mongo:
    image: mongo
    restart: always
    volumes:
      - ./dataM:/data/db:rw
    ports:
      - "27017:27017"
    networks:
      mongo_net:
        ipv4_address: 172.16.0.1
    command: mongod --bind_ip 127.0.0.1,172.16.0.1
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example

networks:
  mongo_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24
          gateway: 172.16.0.254