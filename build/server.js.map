{"version":3,"sources":["../src/server.js"],"names":["app","use","bodyParser","json","type","disable","get","req","res","send","errorHandler","ErrorHandler","err","next","validator","name","code","setHandler","validationHandler","stack","status","message","stackTrace","middleware"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB,EAACC,MAAM,kBAAP,EAAhB,CAAR;AACAJ,IAAIK,OAAJ,CAAY,MAAZ;;AAEAL,IAAIC,GAAJ,CAAQ,QAAR,EAAkB,uBAAlB;AACAD,IAAIM,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAKC,GAAL;AAAA,SAAYA,IAAIC,IAAJ,CAAS,mBAAT,CAAZ;AAAA,CAAhB;AACA,IAAMC,eAAe,IAAIC,6BAAJ,EAArB;;AAEA;AACAX,IAAIC,GAAJ,CAAQ,UAACW,GAAD,EAAML,GAAN,EAAWC,GAAX,EAAgBK,IAAhB,EAAyB;AAC/B,MAAID,IAAIE,SAAR,EAAmB;AACjBF,QAAIG,IAAJ,GAAW,iBAAX;AACAH,QAAII,IAAJ,GAAW,GAAX;AACD;AACDH,OAAKD,GAAL;AACD,CAND;;AAQAF,aAAaO,UAAb,CAAwB,iBAAxB,EAA2C,SAASC,iBAAT,CAA4BN,GAA5B,EAAiCO,KAAjC,EAAwC;AACjF,MAAMX,MAAM,EAAZ;AACAA,MAAIY,MAAJ,GAAa,OAAb;AACAZ,MAAIa,OAAJ,iCAA0CT,IAAIS,OAA9C;AACAb,MAAIQ,IAAJ,GAAWJ,IAAII,IAAf;AACA,MAAIG,KAAJ,EAAWX,IAAIc,UAAJ,GAAiBV,IAAIO,KAArB;AACX,SAAOX,GAAP;AACD,CAPD;;AASAR,IAAIC,GAAJ,CAAQS,aAAaa,UAAb,EAAR;;kBAEevB,G","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport ErrorHandler from 'express-simple-errors';\nimport routes from './todos/routes';\n\nconst app = express();\n\n// app middleware\napp.use(cors());\napp.use(bodyParser.json({type: 'application/json'}));\napp.disable('etag');\n\napp.use('/todos', routes());\napp.get('/fun', (req,res)=> res.send(\"fun times weeeeee\"));\nconst errorHandler = new ErrorHandler();\n\n// validation errors are not typed correctly - changing here\napp.use((err, req, res, next) => {\n  if (err.validator) {\n    err.name = 'ValidationError';\n    err.code = 400;\n  }\n  next(err);\n});\n\nerrorHandler.setHandler('ValidationError', function validationHandler (err, stack) {\n  const res = {};\n  res.status = 'Error';\n  res.message = `Schema Validation Error: ${err.message}`;\n  res.code = err.code;\n  if (stack) res.stackTrace = err.stack;\n  return res;\n});\n\napp.use(errorHandler.middleware());\n\nexport default app;\n"]}